// CSS Reset, comment out if not required or using a different module
@import '~minireset.css/minireset';

// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$workind-machine-primary: mat-palette($mat-blue,800);
$workind-machine-accent: mat-palette($mat-gray, 100, 300, 500);

// The warn palette is optional (defaults to red).
$workind-machine-warn: mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$workind-machine-theme: mat-light-theme((
  color: (
    primary: $workind-machine-primary,
    accent: $workind-machine-accent,
    warn: $workind-machine-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($workind-machine-theme);
/* You can add global styles to this file, and also import other style files */

// Define an alternate dark theme.
$workind-dark-primary: mat-palette($mat-blue,800);
$workind-dark-accent:  mat-palette($mat-gray, 800, 600, 900);
$workind-dark-warn:    mat-palette($mat-deep-orange);
$workind-dark-theme:   mat-dark-theme((
  color: (
    primary: $workind-dark-primary,
    accent: $workind-dark-accent,
    warn: $workind-dark-warn,
  )
));

// Include the dark color styles inside of a block with a CSS class. You can make this
// CSS class whatever you want. In this example, any component inside of an element with
// `.unicorn-dark-theme` will be affected by this alternate dark theme instead of the default theme.
.light-theme{
    @include angular-material-theme($workind-machine-theme);
}
.dark-theme{
    @include angular-material-color($workind-dark-theme);
}

html, body { height: 100%; }
body { margin: 0; font-family: 'Open Sans', sans-serif; }

@import "~igniteui-angular/lib/core/styles/themes/index";
// Uncomment the following lines if you want to add a custom palette:
// $primary: #731963 !default;
// $secondary: #ce5712 !default;
// $app-palette: igx-palette($primary, $secondary);

/* autoprefixer grid: on */

@include igx-core();
@include igx-theme($default-palette);
