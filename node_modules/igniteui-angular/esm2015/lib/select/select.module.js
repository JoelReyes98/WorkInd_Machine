import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { IgxIconModule } from '../icon/public_api';
import { IgxDropDownModule } from '../drop-down/public_api';
import { IgxToggleModule } from './../directives/toggle/toggle.directive';
import { IgxRippleModule } from '../directives/ripple/ripple.directive';
import { IgxInputGroupModule } from '../input-group/input-group.component';
import { IgxButtonModule } from '../directives/button/button.directive';
import { IgxSelectComponent, IgxSelectToggleIconDirective, IgxSelectHeaderDirective, IgxSelectFooterDirective } from './select.component';
import { IgxSelectItemComponent } from './select-item.component';
import { IgxSelectItemNavigationDirective } from './select-navigation.directive';
import { IgxSelectGroupComponent } from './select-group.component';
/** @hidden */
import * as ɵngcc0 from '@angular/core';
export class IgxSelectModule {
}
IgxSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: IgxSelectModule });
IgxSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function IgxSelectModule_Factory(t) { return new (t || IgxSelectModule)(); }, providers: [], imports: [[
            CommonModule,
            FormsModule,
            IgxButtonModule,
            IgxDropDownModule,
            IgxIconModule,
            IgxInputGroupModule,
            IgxRippleModule,
            IgxToggleModule,
            ReactiveFormsModule
        ], IgxInputGroupModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(IgxSelectModule, { declarations: function () { return [IgxSelectComponent,
        IgxSelectFooterDirective,
        IgxSelectGroupComponent,
        IgxSelectHeaderDirective,
        IgxSelectItemComponent,
        IgxSelectItemNavigationDirective,
        IgxSelectToggleIconDirective]; }, imports: function () { return [CommonModule,
        FormsModule,
        IgxButtonModule,
        IgxDropDownModule,
        IgxIconModule,
        IgxInputGroupModule,
        IgxRippleModule,
        IgxToggleModule,
        ReactiveFormsModule]; }, exports: function () { return [IgxSelectComponent,
        IgxSelectFooterDirective,
        IgxSelectGroupComponent,
        IgxSelectHeaderDirective,
        IgxSelectItemComponent,
        IgxSelectItemNavigationDirective,
        IgxSelectToggleIconDirective,
        IgxInputGroupModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxSelectModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    IgxSelectComponent,
                    IgxSelectFooterDirective,
                    IgxSelectGroupComponent,
                    IgxSelectHeaderDirective,
                    IgxSelectItemComponent,
                    IgxSelectItemNavigationDirective,
                    IgxSelectToggleIconDirective
                ],
                exports: [
                    IgxSelectComponent,
                    IgxSelectFooterDirective,
                    IgxSelectGroupComponent,
                    IgxSelectHeaderDirective,
                    IgxSelectItemComponent,
                    IgxSelectItemNavigationDirective,
                    IgxSelectToggleIconDirective,
                    IgxInputGroupModule
                ],
                imports: [
                    CommonModule,
                    FormsModule,
                    IgxButtonModule,
                    IgxDropDownModule,
                    IgxIconModule,
                    IgxInputGroupModule,
                    IgxRippleModule,
                    IgxToggleModule,
                    ReactiveFormsModule
                ],
                providers: []
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0Lm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaWduaXRldWktYW5ndWxhci9zcmMvbGliL3NlbGVjdC9zZWxlY3QubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxXQUFXLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNsRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDbkQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHlDQUF5QyxDQUFDO0FBQzFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUN4RSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUMzRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFFeEUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLDRCQUE0QixFQUFFLHdCQUF3QixFQUFFLHdCQUF3QixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDMUksT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDakUsT0FBTyxFQUFFLGdDQUFnQyxFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDakYsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFFbkUsY0FBYzs7QUFrQ2QsTUFBTSxPQUFPLGVBQWU7QUFBRzsyQ0FqQzlCLFFBQVEsU0FBQztHQUNOLFlBQVksRUFBRSxzQkFDVixrQkFBa0Isc0JBQ2xCLHdCQUF3QixzQkFDeEIsdUJBQXVCO09BQ3ZCO0tBQXdCO0VBQ3hCLHNCQUFzQjtpQkFDdEI7a0JBQWdDO2FBQ2hDO1FBQTRCLGtCQUMvQjtlQUNELE9BQU8sRUFBRTtpQkFDTDtHQUFrQixzQkFDbEI7YUFBd0Isc0JBQ3hCLHVCQUF1QixzQkFDdkIsd0JBQXdCLHNCQUN4QixzQkFBc0I7R0FDdEI7Q0FBZ0Msc0JBQ2hDO2tCQUE0QjtNQUM1QixtQkFBbUI7V0FDdEIsa0JBQ0QsT0FBTyxFQUFFO2tCQUNMLFlBQVksc0JBQ1osV0FBVyxzQkFDWDthQUFlO2NBQ2Y7TUFBaUI7Q0FDakIsYUFBYTthQUNiO0dBQW1CO0FBQ25CLGVBQWU7WUFDZixlQUFlLHNCQUNmLG1CQUFtQjtFQUN0QixrQkFDRCxTQUFTLEVBQUUsRUFBRTthQUNoQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBQ0k7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgRm9ybXNNb2R1bGUsIFJlYWN0aXZlRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBJZ3hJY29uTW9kdWxlIH0gZnJvbSAnLi4vaWNvbi9wdWJsaWNfYXBpJztcbmltcG9ydCB7IElneERyb3BEb3duTW9kdWxlIH0gZnJvbSAnLi4vZHJvcC1kb3duL3B1YmxpY19hcGknO1xuaW1wb3J0IHsgSWd4VG9nZ2xlTW9kdWxlIH0gZnJvbSAnLi8uLi9kaXJlY3RpdmVzL3RvZ2dsZS90b2dnbGUuZGlyZWN0aXZlJztcbmltcG9ydCB7IElneFJpcHBsZU1vZHVsZSB9IGZyb20gJy4uL2RpcmVjdGl2ZXMvcmlwcGxlL3JpcHBsZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgSWd4SW5wdXRHcm91cE1vZHVsZSB9IGZyb20gJy4uL2lucHV0LWdyb3VwL2lucHV0LWdyb3VwLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJZ3hCdXR0b25Nb2R1bGUgfSBmcm9tICcuLi9kaXJlY3RpdmVzL2J1dHRvbi9idXR0b24uZGlyZWN0aXZlJztcblxuaW1wb3J0IHsgSWd4U2VsZWN0Q29tcG9uZW50LCBJZ3hTZWxlY3RUb2dnbGVJY29uRGlyZWN0aXZlLCBJZ3hTZWxlY3RIZWFkZXJEaXJlY3RpdmUsIElneFNlbGVjdEZvb3RlckRpcmVjdGl2ZSB9IGZyb20gJy4vc2VsZWN0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJZ3hTZWxlY3RJdGVtQ29tcG9uZW50IH0gZnJvbSAnLi9zZWxlY3QtaXRlbS5jb21wb25lbnQnO1xuaW1wb3J0IHsgSWd4U2VsZWN0SXRlbU5hdmlnYXRpb25EaXJlY3RpdmUgfSBmcm9tICcuL3NlbGVjdC1uYXZpZ2F0aW9uLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBJZ3hTZWxlY3RHcm91cENvbXBvbmVudCB9IGZyb20gJy4vc2VsZWN0LWdyb3VwLmNvbXBvbmVudCc7XG5cbi8qKiBAaGlkZGVuICovXG5ATmdNb2R1bGUoe1xuICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICBJZ3hTZWxlY3RDb21wb25lbnQsXG4gICAgICAgIElneFNlbGVjdEZvb3RlckRpcmVjdGl2ZSxcbiAgICAgICAgSWd4U2VsZWN0R3JvdXBDb21wb25lbnQsXG4gICAgICAgIElneFNlbGVjdEhlYWRlckRpcmVjdGl2ZSxcbiAgICAgICAgSWd4U2VsZWN0SXRlbUNvbXBvbmVudCxcbiAgICAgICAgSWd4U2VsZWN0SXRlbU5hdmlnYXRpb25EaXJlY3RpdmUsXG4gICAgICAgIElneFNlbGVjdFRvZ2dsZUljb25EaXJlY3RpdmVcbiAgICBdLFxuICAgIGV4cG9ydHM6IFtcbiAgICAgICAgSWd4U2VsZWN0Q29tcG9uZW50LFxuICAgICAgICBJZ3hTZWxlY3RGb290ZXJEaXJlY3RpdmUsXG4gICAgICAgIElneFNlbGVjdEdyb3VwQ29tcG9uZW50LFxuICAgICAgICBJZ3hTZWxlY3RIZWFkZXJEaXJlY3RpdmUsXG4gICAgICAgIElneFNlbGVjdEl0ZW1Db21wb25lbnQsXG4gICAgICAgIElneFNlbGVjdEl0ZW1OYXZpZ2F0aW9uRGlyZWN0aXZlLFxuICAgICAgICBJZ3hTZWxlY3RUb2dnbGVJY29uRGlyZWN0aXZlLFxuICAgICAgICBJZ3hJbnB1dEdyb3VwTW9kdWxlXG4gICAgXSxcbiAgICBpbXBvcnRzOiBbXG4gICAgICAgIENvbW1vbk1vZHVsZSxcbiAgICAgICAgRm9ybXNNb2R1bGUsXG4gICAgICAgIElneEJ1dHRvbk1vZHVsZSxcbiAgICAgICAgSWd4RHJvcERvd25Nb2R1bGUsXG4gICAgICAgIElneEljb25Nb2R1bGUsXG4gICAgICAgIElneElucHV0R3JvdXBNb2R1bGUsXG4gICAgICAgIElneFJpcHBsZU1vZHVsZSxcbiAgICAgICAgSWd4VG9nZ2xlTW9kdWxlLFxuICAgICAgICBSZWFjdGl2ZUZvcm1zTW9kdWxlXG4gICAgXSxcbiAgICBwcm92aWRlcnM6IFtdXG59KVxuZXhwb3J0IGNsYXNzIElneFNlbGVjdE1vZHVsZSB7IH1cbiJdfQ==