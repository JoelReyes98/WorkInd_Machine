import { NgModule } from '@angular/core';
import { IgxDateRangePickerComponent } from './date-range-picker.component';
import { IgxCalendarModule } from '../calendar/public_api';
import { IgxToggleModule } from '../directives/toggle/toggle.directive';
import { CommonModule } from '@angular/common';
import { IgxButtonModule } from '../directives/button/button.directive';
import { IgxInputGroupModule } from '../input-group/public_api';
import { IgxIconModule } from '../icon/public_api';
import { IgxDateRangeStartComponent, IgxDateRangeEndComponent, DateRangePickerFormatPipe, IgxPickerToggleComponent, IgxDateRangeSeparatorDirective, IgxDateRangeInputsBaseComponent } from './date-range-picker-inputs.common';
import { IgxDateTimeEditorModule } from '../directives/date-time-editor/public_api';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export class IgxDateRangePickerModule {
}
IgxDateRangePickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: IgxDateRangePickerModule });
IgxDateRangePickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function IgxDateRangePickerModule_Factory(t) { return new (t || IgxDateRangePickerModule)(); }, imports: [[
            CommonModule,
            IgxIconModule,
            IgxButtonModule,
            IgxToggleModule,
            IgxCalendarModule,
            IgxInputGroupModule,
            IgxDateTimeEditorModule
        ], IgxDateTimeEditorModule,
        IgxInputGroupModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(IgxDateRangePickerModule, { declarations: function () { return [IgxDateRangePickerComponent,
        IgxDateRangeStartComponent,
        IgxDateRangeEndComponent,
        IgxDateRangeInputsBaseComponent,
        DateRangePickerFormatPipe,
        IgxPickerToggleComponent,
        IgxDateRangeSeparatorDirective]; }, imports: function () { return [CommonModule,
        IgxIconModule,
        IgxButtonModule,
        IgxToggleModule,
        IgxCalendarModule,
        IgxInputGroupModule,
        IgxDateTimeEditorModule]; }, exports: function () { return [IgxDateRangePickerComponent,
        IgxDateRangeStartComponent,
        IgxDateRangeEndComponent,
        IgxDateRangeSeparatorDirective,
        IgxDateTimeEditorModule,
        IgxPickerToggleComponent,
        IgxInputGroupModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxDateRangePickerModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    IgxDateRangePickerComponent,
                    IgxDateRangeStartComponent,
                    IgxDateRangeEndComponent,
                    IgxDateRangeInputsBaseComponent,
                    DateRangePickerFormatPipe,
                    IgxPickerToggleComponent,
                    IgxDateRangeSeparatorDirective
                ],
                imports: [
                    CommonModule,
                    IgxIconModule,
                    IgxButtonModule,
                    IgxToggleModule,
                    IgxCalendarModule,
                    IgxInputGroupModule,
                    IgxDateTimeEditorModule
                ],
                exports: [
                    IgxDateRangePickerComponent,
                    IgxDateRangeStartComponent,
                    IgxDateRangeEndComponent,
                    IgxDateRangeSeparatorDirective,
                    IgxDateTimeEditorModule,
                    IgxPickerToggleComponent,
                    IgxInputGroupModule
                ]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1yYW5nZS1waWNrZXIubW9kdWxlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9pZ25pdGV1aS1hbmd1bGFyL3NyYy9saWIvZGF0ZS1yYW5nZS1waWNrZXIvZGF0ZS1yYW5nZS1waWNrZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDNUUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDM0QsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDeEUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDaEUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ25ELE9BQU8sRUFDSCwwQkFBMEIsRUFBRSx3QkFBd0IsRUFDcEQseUJBQXlCLEVBQ3pCLHdCQUF3QixFQUN4Qiw4QkFBOEIsRUFDOUIsK0JBQStCLEVBQ2xDLE1BQU0sbUNBQW1DLENBQUM7QUFDM0MsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFFcEY7QUFDQTtBQUNBLEdBQUc7O0FBOEJILE1BQU0sT0FBTyx3QkFBd0I7QUFBRztvREE3QnZDLFFBQVEsU0FBQyxrQkFDTjtNQUFZLEVBQUUsc0JBQ1YsMkJBQTJCLHNCQUMzQiwwQkFBMEIsc0JBQzFCLHdCQUF3QixzQkFDeEI7O0dBQStCLHNCQUMvQjt1QkFBeUI7Z0JBQ3pCO1dBQXdCO0VBQ3hCLDhCQUE4QjtpQkFDakMsa0JBQ0Q7TUFBTyxFQUFFLHNCQUNMO01BQVksc0JBQ1o7UUFBYSxzQkFDYixlQUFlLHNCQUNmLGVBQWUsc0JBQ2YsaUJBQWlCLHNCQUNqQixtQkFBbUIsc0JBQ25CO3NCQUF1QjtJQUMxQixrQkFDRCxPQUFPLEVBQUU7bUJBQ0w7S0FBMkIsc0JBQzNCO2tCQUEwQjtNQUMxQix3QkFBd0Isc0JBQ3hCLDhCQUE4QjtlQUM5QjtlQUF1QjtZQUN2QjtXQUF3QjtNQUN4QixtQkFBbUI7Y0FDdEIsY0FDSjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBQ0k7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJZ3hEYXRlUmFuZ2VQaWNrZXJDb21wb25lbnQgfSBmcm9tICcuL2RhdGUtcmFuZ2UtcGlja2VyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJZ3hDYWxlbmRhck1vZHVsZSB9IGZyb20gJy4uL2NhbGVuZGFyL3B1YmxpY19hcGknO1xuaW1wb3J0IHsgSWd4VG9nZ2xlTW9kdWxlIH0gZnJvbSAnLi4vZGlyZWN0aXZlcy90b2dnbGUvdG9nZ2xlLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgSWd4QnV0dG9uTW9kdWxlIH0gZnJvbSAnLi4vZGlyZWN0aXZlcy9idXR0b24vYnV0dG9uLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBJZ3hJbnB1dEdyb3VwTW9kdWxlIH0gZnJvbSAnLi4vaW5wdXQtZ3JvdXAvcHVibGljX2FwaSc7XG5pbXBvcnQgeyBJZ3hJY29uTW9kdWxlIH0gZnJvbSAnLi4vaWNvbi9wdWJsaWNfYXBpJztcbmltcG9ydCB7XG4gICAgSWd4RGF0ZVJhbmdlU3RhcnRDb21wb25lbnQsIElneERhdGVSYW5nZUVuZENvbXBvbmVudCxcbiAgICBEYXRlUmFuZ2VQaWNrZXJGb3JtYXRQaXBlLFxuICAgIElneFBpY2tlclRvZ2dsZUNvbXBvbmVudCxcbiAgICBJZ3hEYXRlUmFuZ2VTZXBhcmF0b3JEaXJlY3RpdmUsXG4gICAgSWd4RGF0ZVJhbmdlSW5wdXRzQmFzZUNvbXBvbmVudFxufSBmcm9tICcuL2RhdGUtcmFuZ2UtcGlja2VyLWlucHV0cy5jb21tb24nO1xuaW1wb3J0IHsgSWd4RGF0ZVRpbWVFZGl0b3JNb2R1bGUgfSBmcm9tICcuLi9kaXJlY3RpdmVzL2RhdGUtdGltZS1lZGl0b3IvcHVibGljX2FwaSc7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5ATmdNb2R1bGUoe1xuICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICBJZ3hEYXRlUmFuZ2VQaWNrZXJDb21wb25lbnQsXG4gICAgICAgIElneERhdGVSYW5nZVN0YXJ0Q29tcG9uZW50LFxuICAgICAgICBJZ3hEYXRlUmFuZ2VFbmRDb21wb25lbnQsXG4gICAgICAgIElneERhdGVSYW5nZUlucHV0c0Jhc2VDb21wb25lbnQsXG4gICAgICAgIERhdGVSYW5nZVBpY2tlckZvcm1hdFBpcGUsXG4gICAgICAgIElneFBpY2tlclRvZ2dsZUNvbXBvbmVudCxcbiAgICAgICAgSWd4RGF0ZVJhbmdlU2VwYXJhdG9yRGlyZWN0aXZlXG4gICAgXSxcbiAgICBpbXBvcnRzOiBbXG4gICAgICAgIENvbW1vbk1vZHVsZSxcbiAgICAgICAgSWd4SWNvbk1vZHVsZSxcbiAgICAgICAgSWd4QnV0dG9uTW9kdWxlLFxuICAgICAgICBJZ3hUb2dnbGVNb2R1bGUsXG4gICAgICAgIElneENhbGVuZGFyTW9kdWxlLFxuICAgICAgICBJZ3hJbnB1dEdyb3VwTW9kdWxlLFxuICAgICAgICBJZ3hEYXRlVGltZUVkaXRvck1vZHVsZVxuICAgIF0sXG4gICAgZXhwb3J0czogW1xuICAgICAgICBJZ3hEYXRlUmFuZ2VQaWNrZXJDb21wb25lbnQsXG4gICAgICAgIElneERhdGVSYW5nZVN0YXJ0Q29tcG9uZW50LFxuICAgICAgICBJZ3hEYXRlUmFuZ2VFbmRDb21wb25lbnQsXG4gICAgICAgIElneERhdGVSYW5nZVNlcGFyYXRvckRpcmVjdGl2ZSxcbiAgICAgICAgSWd4RGF0ZVRpbWVFZGl0b3JNb2R1bGUsXG4gICAgICAgIElneFBpY2tlclRvZ2dsZUNvbXBvbmVudCxcbiAgICAgICAgSWd4SW5wdXRHcm91cE1vZHVsZVxuICAgIF1cbn0pXG5leHBvcnQgY2xhc3MgSWd4RGF0ZVJhbmdlUGlja2VyTW9kdWxlIHsgfVxuIl19