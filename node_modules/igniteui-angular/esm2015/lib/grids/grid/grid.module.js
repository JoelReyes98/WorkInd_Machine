import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';
import { IgxGroupAreaDropDirective, IgxGroupByRowTemplateDirective, IgxGridDetailTemplateDirective } from './grid.directives';
import { IgxGridComponent } from './grid.component';
import { IgxGridPagingPipe, IgxGridGroupingPipe, IgxGridSortingPipe, IgxGridFilteringPipe } from './grid.pipes';
import { IgxGridGroupByRowComponent } from './groupby-row.component';
import { IgxGridRowComponent } from './grid-row.component';
import { IgxGridCommonModule } from '../grid-common.module';
import { IgxGridSummaryPipe } from './grid.summary.pipe';
import { IgxGridDetailsPipe } from './grid.details.pipe';
import { IgxGridExpandableCellComponent } from './expandable-cell.component';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export class IgxGridModule {
}
IgxGridModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: IgxGridModule });
IgxGridModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function IgxGridModule_Factory(t) { return new (t || IgxGridModule)(); }, imports: [[
            IgxGridCommonModule,
        ], IgxGridCommonModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(IgxGridModule, { declarations: function () { return [IgxGridComponent,
        IgxGridRowComponent,
        IgxGridGroupByRowComponent,
        IgxGroupByRowTemplateDirective,
        IgxGridDetailTemplateDirective,
        IgxGroupAreaDropDirective,
        IgxGridGroupingPipe,
        IgxGridPagingPipe,
        IgxGridSortingPipe,
        IgxGridFilteringPipe,
        IgxGridSummaryPipe,
        IgxGridDetailsPipe,
        IgxGridExpandableCellComponent]; }, imports: function () { return [IgxGridCommonModule]; }, exports: function () { return [IgxGridComponent,
        IgxGridExpandableCellComponent,
        IgxGridGroupByRowComponent,
        IgxGridRowComponent,
        IgxGroupByRowTemplateDirective,
        IgxGridDetailTemplateDirective,
        IgxGroupAreaDropDirective,
        IgxGridGroupingPipe,
        IgxGridPagingPipe,
        IgxGridSortingPipe,
        IgxGridFilteringPipe,
        IgxGridSummaryPipe,
        IgxGridDetailsPipe,
        IgxGridCommonModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxGridModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    IgxGridComponent,
                    IgxGridRowComponent,
                    IgxGridGroupByRowComponent,
                    IgxGroupByRowTemplateDirective,
                    IgxGridDetailTemplateDirective,
                    IgxGroupAreaDropDirective,
                    IgxGridGroupingPipe,
                    IgxGridPagingPipe,
                    IgxGridSortingPipe,
                    IgxGridFilteringPipe,
                    IgxGridSummaryPipe,
                    IgxGridDetailsPipe,
                    IgxGridExpandableCellComponent
                ],
                exports: [
                    IgxGridComponent,
                    IgxGridExpandableCellComponent,
                    IgxGridGroupByRowComponent,
                    IgxGridRowComponent,
                    IgxGroupByRowTemplateDirective,
                    IgxGridDetailTemplateDirective,
                    IgxGroupAreaDropDirective,
                    IgxGridGroupingPipe,
                    IgxGridPagingPipe,
                    IgxGridSortingPipe,
                    IgxGridFilteringPipe,
                    IgxGridSummaryPipe,
                    IgxGridDetailsPipe,
                    IgxGridCommonModule
                ],
                imports: [
                    IgxGridCommonModule,
                ],
                schemas: [CUSTOM_ELEMENTS_SCHEMA]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZC5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2lnbml0ZXVpLWFuZ3VsYXIvc3JjL2xpYi9ncmlkcy9ncmlkL2dyaWQubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakUsT0FBTyxFQUNILHlCQUF5QixFQUN6Qiw4QkFBOEIsRUFDOUIsOEJBQThCLEVBQ2pDLE1BQU0sbUJBQW1CLENBQUM7QUFDM0IsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDcEQsT0FBTyxFQUNILGlCQUFpQixFQUNqQixtQkFBbUIsRUFDbkIsa0JBQWtCLEVBQ2xCLG9CQUFvQixFQUN2QixNQUFNLGNBQWMsQ0FBQztBQUN0QixPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUNyRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUMzRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN6RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN6RCxPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUM3RTtBQUNBO0FBQ0EsR0FBRzs7QUFzQ0gsTUFBTSxPQUFPLGFBQWE7QUFBRzt5Q0FyQzVCLFFBQVEsU0FBQztLQUNSLFlBQVksRUFBRSxzQkFDWixnQkFBZ0Isc0JBQ2hCLG1CQUFtQixzQkFDbkI7SUFBMEIsc0JBQzFCO3VCQUE4QjtTQUM5Qiw4QkFBOEIsc0JBQzlCLHlCQUF5QixzQkFDekIsbUJBQW1CLHNCQUNuQjtHQUFpQixzQkFDakI7Y0FBa0I7QUFDbEIsb0JBQW9CO0VBQ3BCLGtCQUFrQjtFQUNsQixrQkFBa0I7T0FDbEI7UUFBOEIsa0JBQy9CO2lCQUNELE9BQU8sRUFBRTtvQkFDUDtNQUFnQjtBQUNoQjtFQUE4QixzQkFDOUIsMEJBQTBCLHNCQUMxQixtQkFBbUIsc0JBQ25CLDhCQUE4QjtnQkFDOUI7TUFBOEIsc0JBQzlCO2lCQUF5QjtVQUN6QixtQkFBbUI7V0FDbkIsaUJBQWlCO1VBQ2pCLGtCQUFrQjtlQUNsQjtNQUFvQjtDQUNwQixrQkFBa0I7YUFDbEI7Q0FBa0Isc0JBQ2xCO2NBQW1CO0lBQ3BCLGtCQUNELE9BQU8sRUFBRTtXQUNQLG1CQUFtQixtQkFDcEIsa0JBQ0Q7RUFBTyxFQUFFLENBQUM7R0FBc0IsQ0FBQztDQUNsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBCQUNJO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgQ1VTVE9NX0VMRU1FTlRTX1NDSEVNQSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgICBJZ3hHcm91cEFyZWFEcm9wRGlyZWN0aXZlLFxuICAgIElneEdyb3VwQnlSb3dUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICBJZ3hHcmlkRGV0YWlsVGVtcGxhdGVEaXJlY3RpdmVcbn0gZnJvbSAnLi9ncmlkLmRpcmVjdGl2ZXMnO1xuaW1wb3J0IHsgSWd4R3JpZENvbXBvbmVudCB9IGZyb20gJy4vZ3JpZC5jb21wb25lbnQnO1xuaW1wb3J0IHtcbiAgICBJZ3hHcmlkUGFnaW5nUGlwZSxcbiAgICBJZ3hHcmlkR3JvdXBpbmdQaXBlLFxuICAgIElneEdyaWRTb3J0aW5nUGlwZSxcbiAgICBJZ3hHcmlkRmlsdGVyaW5nUGlwZVxufSBmcm9tICcuL2dyaWQucGlwZXMnO1xuaW1wb3J0IHsgSWd4R3JpZEdyb3VwQnlSb3dDb21wb25lbnQgfSBmcm9tICcuL2dyb3VwYnktcm93LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJZ3hHcmlkUm93Q29tcG9uZW50IH0gZnJvbSAnLi9ncmlkLXJvdy5jb21wb25lbnQnO1xuaW1wb3J0IHsgSWd4R3JpZENvbW1vbk1vZHVsZSB9IGZyb20gJy4uL2dyaWQtY29tbW9uLm1vZHVsZSc7XG5pbXBvcnQgeyBJZ3hHcmlkU3VtbWFyeVBpcGUgfSBmcm9tICcuL2dyaWQuc3VtbWFyeS5waXBlJztcbmltcG9ydCB7IElneEdyaWREZXRhaWxzUGlwZSB9IGZyb20gJy4vZ3JpZC5kZXRhaWxzLnBpcGUnO1xuaW1wb3J0IHsgSWd4R3JpZEV4cGFuZGFibGVDZWxsQ29tcG9uZW50IH0gZnJvbSAnLi9leHBhbmRhYmxlLWNlbGwuY29tcG9uZW50Jztcbi8qKlxuICogQGhpZGRlblxuICovXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBJZ3hHcmlkQ29tcG9uZW50LFxuICAgIElneEdyaWRSb3dDb21wb25lbnQsXG4gICAgSWd4R3JpZEdyb3VwQnlSb3dDb21wb25lbnQsXG4gICAgSWd4R3JvdXBCeVJvd1RlbXBsYXRlRGlyZWN0aXZlLFxuICAgIElneEdyaWREZXRhaWxUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICBJZ3hHcm91cEFyZWFEcm9wRGlyZWN0aXZlLFxuICAgIElneEdyaWRHcm91cGluZ1BpcGUsXG4gICAgSWd4R3JpZFBhZ2luZ1BpcGUsXG4gICAgSWd4R3JpZFNvcnRpbmdQaXBlLFxuICAgIElneEdyaWRGaWx0ZXJpbmdQaXBlLFxuICAgIElneEdyaWRTdW1tYXJ5UGlwZSxcbiAgICBJZ3hHcmlkRGV0YWlsc1BpcGUsXG4gICAgSWd4R3JpZEV4cGFuZGFibGVDZWxsQ29tcG9uZW50XG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBJZ3hHcmlkQ29tcG9uZW50LFxuICAgIElneEdyaWRFeHBhbmRhYmxlQ2VsbENvbXBvbmVudCxcbiAgICBJZ3hHcmlkR3JvdXBCeVJvd0NvbXBvbmVudCxcbiAgICBJZ3hHcmlkUm93Q29tcG9uZW50LFxuICAgIElneEdyb3VwQnlSb3dUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICBJZ3hHcmlkRGV0YWlsVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgSWd4R3JvdXBBcmVhRHJvcERpcmVjdGl2ZSxcbiAgICBJZ3hHcmlkR3JvdXBpbmdQaXBlLFxuICAgIElneEdyaWRQYWdpbmdQaXBlLFxuICAgIElneEdyaWRTb3J0aW5nUGlwZSxcbiAgICBJZ3hHcmlkRmlsdGVyaW5nUGlwZSxcbiAgICBJZ3hHcmlkU3VtbWFyeVBpcGUsXG4gICAgSWd4R3JpZERldGFpbHNQaXBlLFxuICAgIElneEdyaWRDb21tb25Nb2R1bGVcbiAgXSxcbiAgaW1wb3J0czogW1xuICAgIElneEdyaWRDb21tb25Nb2R1bGUsXG4gIF0sXG4gIHNjaGVtYXM6IFtDVVNUT01fRUxFTUVOVFNfU0NIRU1BXVxufSlcbmV4cG9ydCBjbGFzcyBJZ3hHcmlkTW9kdWxlIHt9XG4iXX0=