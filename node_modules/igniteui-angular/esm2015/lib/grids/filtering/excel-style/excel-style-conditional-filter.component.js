import { Component, ViewChild } from '@angular/core';
import { Subject } from 'rxjs';
import { DataType } from '../../../data-operations/data-util';
import { IgxDropDownComponent } from '../../../drop-down/public_api';
import { IgxExcelStyleCustomDialogComponent } from './excel-style-custom-dialog.component';
import { HorizontalAlignment, VerticalAlignment, AutoPositionStrategy, AbsoluteScrollStrategy } from '../../../services/public_api';
import { IgxGridExcelStyleFilteringComponent } from './grid.excel-style-filtering.component';
import { takeUntil } from 'rxjs/operators';
/**
 * A component used for presenting Excel style conditional filter UI.
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './grid.excel-style-filtering.component';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '../../../drop-down/drop-down-navigation.directive';
import * as ɵngcc4 from '../../../icon/icon.component';
import * as ɵngcc5 from '../../../drop-down/drop-down.component';
import * as ɵngcc6 from './excel-style-custom-dialog.component';
import * as ɵngcc7 from '../../../drop-down/drop-down-item.component';

const _c0 = ["customDialog"];
const _c1 = ["subMenu"];
function IgxExcelStyleConditionalFilterComponent_ng_container_0_igx_drop_down_item_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "igx-drop-down-item", 7);
    ɵngcc0.ɵɵelementStart(1, "div", 8);
    ɵngcc0.ɵɵelement(2, "igx-icon", 9);
    ɵngcc0.ɵɵelementStart(3, "span", 10);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const condition_r5 = ctx.$implicit;
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("value", condition_r5);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("name", ctx_r2.getCondition(condition_r5).iconName);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r2.translateCondition(condition_r5));
} }
function IgxExcelStyleConditionalFilterComponent_ng_container_0_igx_drop_down_item_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "igx-drop-down-item");
    ɵngcc0.ɵɵelementStart(1, "div", 8);
    ɵngcc0.ɵɵelementStart(2, "igx-icon");
    ɵngcc0.ɵɵtext(3, "filter_list");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "span", 10);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate(ctx_r3.esf.grid.resourceStrings.igx_grid_excel_custom_filter);
} }
function IgxExcelStyleConditionalFilterComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    const _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 1);
    ɵngcc0.ɵɵlistener("keydown", function IgxExcelStyleConditionalFilterComponent_ng_container_0_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.onTextFilterKeyDown($event); })("click", function IgxExcelStyleConditionalFilterComponent_ng_container_0_Template_div_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.onTextFilterClick($event); });
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "igx-icon");
    ɵngcc0.ɵɵtext(5, "keyboard_arrow_right");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "igx-drop-down", 2, 3);
    ɵngcc0.ɵɵlistener("onSelection", function IgxExcelStyleConditionalFilterComponent_ng_container_0_Template_igx_drop_down_onSelection_6_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.onSubMenuSelection($event); })("onClosed", function IgxExcelStyleConditionalFilterComponent_ng_container_0_Template_igx_drop_down_onClosed_6_listener() { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.onSubMenuClosed(); });
    ɵngcc0.ɵɵelementStart(8, "div");
    ɵngcc0.ɵɵtemplate(9, IgxExcelStyleConditionalFilterComponent_ng_container_0_igx_drop_down_item_9_Template, 5, 3, "igx-drop-down-item", 4);
    ɵngcc0.ɵɵtemplate(10, IgxExcelStyleConditionalFilterComponent_ng_container_0_igx_drop_down_item_10_Template, 6, 1, "igx-drop-down-item", 0);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(11, "igx-excel-style-custom-dialog", 5, 6);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const _r1 = ɵngcc0.ɵɵreference(7);
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("igxDropDownItemNavigation", _r1);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.subMenuText);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("maxHeight", "397px")("displayDensity", ctx_r0.esf.grid.displayDensity);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.conditions);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.showCustomFilterItem());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("column", ctx_r0.esf.column)("filteringService", ctx_r0.esf.grid.filteringService)("overlayComponentId", ctx_r0.esf.overlayComponentId)("overlayService", ctx_r0.esf.overlayService)("displayDensity", ctx_r0.esf.grid.displayDensity);
} }
export class IgxExcelStyleConditionalFilterComponent {
    constructor(esf) {
        this.esf = esf;
        this.shouldOpenSubMenu = true;
        this.destroy$ = new Subject();
        this._subMenuPositionSettings = {
            verticalStartPoint: VerticalAlignment.Top
        };
        this._subMenuOverlaySettings = {
            closeOnOutsideClick: true,
            modal: false,
            positionStrategy: new AutoPositionStrategy(this._subMenuPositionSettings),
            scrollStrategy: new AbsoluteScrollStrategy()
        };
        this.esf.columnChange.pipe(takeUntil(this.destroy$)).subscribe(() => {
            if (this.esf.grid) {
                this.shouldOpenSubMenu = true;
                this._subMenuOverlaySettings.outlet = this.esf.grid.outlet;
            }
        });
        if (this.esf.grid) {
            this._subMenuOverlaySettings.outlet = this.esf.grid.outlet;
        }
    }
    ngOnDestroy() {
        this.destroy$.next(true);
        this.destroy$.complete();
    }
    /**
     * @hidden @internal
     */
    onTextFilterKeyDown(eventArgs) {
        if (eventArgs.key === "Enter" /* ENTER */) {
            this.onTextFilterClick(eventArgs);
        }
    }
    /**
     * @hidden @internal
     */
    onTextFilterClick(eventArgs) {
        if (this.shouldOpenSubMenu) {
            this._subMenuOverlaySettings.target = eventArgs.currentTarget;
            const gridRect = this.esf.grid.nativeElement.getBoundingClientRect();
            const dropdownRect = this.esf.mainDropdown.nativeElement.getBoundingClientRect();
            let x = dropdownRect.left + dropdownRect.width;
            let x1 = gridRect.left + gridRect.width;
            x += window.pageXOffset;
            x1 += window.pageXOffset;
            if (Math.abs(x - x1) < 200) {
                this._subMenuOverlaySettings.positionStrategy.settings.horizontalDirection = HorizontalAlignment.Left;
                this._subMenuOverlaySettings.positionStrategy.settings.horizontalStartPoint = HorizontalAlignment.Left;
            }
            else {
                this._subMenuOverlaySettings.positionStrategy.settings.horizontalDirection = HorizontalAlignment.Right;
                this._subMenuOverlaySettings.positionStrategy.settings.horizontalStartPoint = HorizontalAlignment.Right;
            }
            this.subMenu.open(this._subMenuOverlaySettings);
            this.shouldOpenSubMenu = false;
        }
    }
    /**
     * @hidden @internal
     */
    getCondition(value) {
        return this.esf.column.filters.condition(value);
    }
    /**
     * @hidden @internal
     */
    translateCondition(value) {
        return this.esf.grid.resourceStrings[`igx_grid_filter_${this.getCondition(value).name}`] || value;
    }
    /**
     * @hidden @internal
     */
    onSubMenuSelection(eventArgs) {
        if (this.esf.expressionsList && this.esf.expressionsList.length &&
            this.esf.expressionsList[0].expression.condition.name !== 'in') {
            this.customDialog.expressionsList = this.esf.expressionsList;
        }
        this.customDialog.selectedOperator = eventArgs.newSelection.value;
        eventArgs.cancel = true;
        if (this.esf.overlayComponentId) {
            this.esf.hide();
        }
        this.subMenu.close();
        this.customDialog.open(this.esf.mainDropdown.nativeElement);
    }
    /**
     * @hidden @internal
     */
    onSubMenuClosed() {
        requestAnimationFrame(() => {
            this.shouldOpenSubMenu = true;
        });
    }
    /**
     * @hidden @internal
     */
    showCustomFilterItem() {
        const exprTree = this.esf.column.filteringExpressionsTree;
        return exprTree && exprTree.filteringOperands && exprTree.filteringOperands.length &&
            !(exprTree.filteringOperands[0].condition &&
                exprTree.filteringOperands[0].condition.name === 'in');
    }
    /**
     * @hidden @internal
     */
    get subMenuText() {
        switch (this.esf.column.dataType) {
            case DataType.Boolean:
                return this.esf.grid.resourceStrings.igx_grid_excel_boolean_filter;
            case DataType.Number:
                return this.esf.grid.resourceStrings.igx_grid_excel_number_filter;
            case DataType.Date:
                return this.esf.grid.resourceStrings.igx_grid_excel_date_filter;
            default:
                return this.esf.grid.resourceStrings.igx_grid_excel_text_filter;
        }
    }
    /**
     * @hidden @internal
     */
    get conditions() {
        return this.esf.column.filters.conditionList();
    }
}
IgxExcelStyleConditionalFilterComponent.ɵfac = function IgxExcelStyleConditionalFilterComponent_Factory(t) { return new (t || IgxExcelStyleConditionalFilterComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.IgxGridExcelStyleFilteringComponent)); };
IgxExcelStyleConditionalFilterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: IgxExcelStyleConditionalFilterComponent, selectors: [["igx-excel-style-conditional-filter"]], viewQuery: function IgxExcelStyleConditionalFilterComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, true, IgxExcelStyleCustomDialogComponent);
        ɵngcc0.ɵɵviewQuery(_c1, true, IgxDropDownComponent);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customDialog = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.subMenu = _t.first);
    } }, decls: 1, vars: 1, consts: [[4, "ngIf"], ["tabindex", "0", 1, "igx-excel-filter__actions-filter", 3, "igxDropDownItemNavigation", "keydown", "click"], [3, "maxHeight", "displayDensity", "onSelection", "onClosed"], ["subMenu", ""], [3, "value", 4, "ngFor", "ngForOf"], [3, "column", "filteringService", "overlayComponentId", "overlayService", "displayDensity"], ["customDialog", ""], [3, "value"], [1, "igx-grid__filtering-dropdown-items"], ["fontSet", "imx-icons", 3, "name"], [1, "igx-grid__filtering-dropdown-text"]], template: function IgxExcelStyleConditionalFilterComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, IgxExcelStyleConditionalFilterComponent_ng_container_0_Template, 13, 11, "ng-container", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.esf.column);
    } }, directives: [ɵngcc2.NgIf, ɵngcc3.IgxDropDownItemNavigationDirective, ɵngcc4.IgxIconComponent, ɵngcc5.IgxDropDownComponent, ɵngcc2.NgForOf, ɵngcc6.IgxExcelStyleCustomDialogComponent, ɵngcc7.IgxDropDownItemComponent], encapsulation: 2 });
IgxExcelStyleConditionalFilterComponent.ctorParameters = () => [
    { type: IgxGridExcelStyleFilteringComponent }
];
IgxExcelStyleConditionalFilterComponent.propDecorators = {
    customDialog: [{ type: ViewChild, args: ['customDialog', { read: IgxExcelStyleCustomDialogComponent },] }],
    subMenu: [{ type: ViewChild, args: ['subMenu', { read: IgxDropDownComponent },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IgxExcelStyleConditionalFilterComponent, [{
        type: Component,
        args: [{
                preserveWhitespaces: false,
                selector: 'igx-excel-style-conditional-filter',
                template: "<ng-container *ngIf=\"esf.column\">\n    <div tabindex=\"0\"\n        class=\"igx-excel-filter__actions-filter\"\n        (keydown)=\"onTextFilterKeyDown($event)\"\n        (click)=\"onTextFilterClick($event)\"\n        [igxDropDownItemNavigation]=\"subMenu\">\n        <span>{{ subMenuText }}</span>\n        <igx-icon>keyboard_arrow_right</igx-icon>\n    </div>\n\n    <igx-drop-down\n        #subMenu\n        [maxHeight]=\"'397px'\"\n        [displayDensity]=\"esf.grid.displayDensity\"\n        (onSelection)=\"onSubMenuSelection($event)\"\n        (onClosed)=\"onSubMenuClosed()\">\n        <div>\n            <igx-drop-down-item\n            *ngFor=\"let condition of conditions\"\n            [value]=\"condition\">\n                <div class=\"igx-grid__filtering-dropdown-items\">\n                    <igx-icon fontSet=\"imx-icons\" [name]=\"getCondition(condition).iconName\"></igx-icon>\n                    <span class=\"igx-grid__filtering-dropdown-text\">{{ translateCondition(condition) }}</span>\n                </div>\n            </igx-drop-down-item>\n            <igx-drop-down-item *ngIf=\"showCustomFilterItem()\">\n                <div class=\"igx-grid__filtering-dropdown-items\">\n                    <igx-icon>filter_list</igx-icon>\n                    <span class=\"igx-grid__filtering-dropdown-text\">{{ esf.grid.resourceStrings.igx_grid_excel_custom_filter }}</span>\n                </div>\n            </igx-drop-down-item>\n        </div>\n    </igx-drop-down>\n\n    <igx-excel-style-custom-dialog\n        #customDialog\n        [column]=\"esf.column\"\n        [filteringService]=\"esf.grid.filteringService\"\n        [overlayComponentId]=\"esf.overlayComponentId\"\n        [overlayService]=\"esf.overlayService\"\n        [displayDensity]=\"esf.grid.displayDensity\">\n    </igx-excel-style-custom-dialog>\n</ng-container>\n"
            }]
    }], function () { return [{ type: ɵngcc1.IgxGridExcelStyleFilteringComponent }]; }, { customDialog: [{
            type: ViewChild,
            args: ['customDialog', { read: IgxExcelStyleCustomDialogComponent }]
        }], subMenu: [{
            type: ViewChild,
            args: ['subMenu', { read: IgxDropDownComponent }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,